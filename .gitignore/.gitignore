''' tk_BGImage1.py
use a Tkinter label as a panel/frame with a background image
(note that Tkinter without PIL reads only GIF and PGM/PPM images)
modified from a vegaseat example
'''
# -*- coding: utf-8 -*-
import numpy as np
import csv
import os
import sys
import datetime
from datetime import datetime
#import tkMessageBox
from tkinter import messagebox

try:
    # for Python2
    import Tkinter as tk
except ImportError:
    # for Python3
    import tkinter as tk
root = tk.Tk()
root.title('子瑜:加油喔!')
# pick a .gif image file you have in the working directory
# or give full path
#image1 = tk.PhotoImage(file="123.png")
image2 = tk.PhotoImage(file="456.png")
#w = image1.width()
#h = image1.height()
#root.geometry("%dx%d+100+100" % (w, h))
root.geometry("650x650+100+100")
root.iconbitmap(r'123.ico')
#f1=tk.Frame(root, image = image1)
#f1.pack(side='top', fill='both', expand='yes')



def button_1 ():

    var = add_item.get()
    if var != "" :
        date = datetime.now().strftime("%Y/%m/%d")
        data=[date,var]
        
        f = open('test.csv','a', newline='')
        csv_write = csv.writer(f, dialect='excel', delimiter="\t")
        csv_write.writerow(data)
        f.close()
        
        m1.insert(tk.END, data)
        add_item.delete(0, 'end')
    else:
        pass
            
        
def del_item():
    var = add_item.get()
    date = datetime.now().strftime("%Y/%m/%d")
    m1.delete(m1.curselection())
    line = m1.size()
    
    m2 = m1.get(0, tk.END)

    
    #print (m2)     
    f = open('test.csv','w')
    csv_write = csv.writer(f, dialect='excel', delimiter="\n")
    m3 = (' '.join(m2))
    csv_write.writerow(m3)
    
    f.close()    
        
     


f1 = tk.Frame(root)
f1.pack(side='top', expand='y', fill='both')
        
f2 = tk.Frame(root)
f2.pack(side='bottom', expand='y', fill='both')



# tk.Frame has no image argument
# so use a label as a panel/frame

panel1 = tk.Label(f1, image =image2)
panel1.pack(side='top', fill='both', expand='n')

# make listbox and scrollbar
m1 = tk.Listbox(f1, height=20, width = 90)
scroll = tk.Scrollbar(f1, command = m1.yview)
m1.configure(yscrollcommand = scroll.set)
m1.pack(side='left')
scroll.pack(side='right', fill='y')

# open csv and display in listbox

f = open('test.csv', 'r', newline='')
for row in csv.reader(f, dialect='excel', delimiter="\t"):
    m1.insert(tk.END, row)
f.close()

# input new item

label_1 = tk.Label(master=f2, text="Input new item")
label_1.pack(side='left')

add_item = tk.Entry(master=f2, width=50)
add_item.pack(side='left')

button_1=tk.Button(master=f2, text="確定", command= button_1)
button_1.pack(side='left')

button_2=tk.Button(master=f2, text="delete", command=del_item)
button_2.pack(side='left')


#with open('test.csv', 'rb') as f:
#    reader = csv.reader(f)
#    list1 = tk.List(reader)
#        for item in range(list1):
#            m1.insert(tk.END, item)
           

#button2 = tk.Button(panel1, text='refresh', padx = 20,  command = list_1)
#button2.pack(side='left')

# save the panel's image from 'garbage collection'

#panel1.image = image1


# start the event loop
root.mainloop()
